su<-tapply(df1$steps, df1$date, sum)
su<-as.numeric(su)
hist(su, main="Histogram of the total steps by day"
, breaks = 50
, freq=T
,xlab="steps")
hist(su, main="Histogram of the total steps by day"
, breaks = 500
, freq=T
,xlab="steps")
df1<-na.omit(df)
su<-tapply(df1$steps, df1$date, sum)
su
su<-as.numeric(su)
su
hist(stepsByDay, col = "orange")
stepsByDay <- tapply(df$steps, df$date, sum, na.rm = T)
hist(stepsByDay, breaks=40 col = "orange")
hist(stepsByDay, breaks=40, col = "orange")
hist(stepsByDay, breaks=400, col = "orange")
hist(stepsByDay, breaks=100, col = "orange")
df1<-na.omit(df)
df1
su<-tapply(df1$steps, df1$date, sum)
su<-as.numeric(su)
su
hist(stepsByDay, breaks=100, col = "orange")
mean(stepsByDay, na.rm = T)
median(stepsByDay, na.rm = T)
df1<-na.omit(df)
su<-tapply(df1$steps, df1$date, sum)
su<-as.numeric(su)
hist(su, main="Histogram of the total steps by day"
, breaks = 50
, freq=T
,xlab="steps")
# mean and median
m<-mean(su, na.rm=T)
m
m2<-median(su,  na.rm=T)
m2
df <- read.csv("activity.csv", sep = ",")
names(df)
head(df)
tail(df)
#amaurandi
df1<-na.omit(df)
stepsByDay <- tapply(df1$steps, df1$date, sum, na.rm = T)
mean(stepsByDay, na.rm = T)
median(stepsByDay, na.rm = T)
mean(stepsByDay)
stepsByDay <- tapply(df1$steps, df1$date, sum, na.rm = T)
stepsByDay
hist(stepsByDay, breaks=100, col = "orange")
mean(stepsByDay, na.rm )
stepsByDay <- tapply(df1$steps, df1$date, sum, na.rm = T)
hist(stepsByDay, breaks=100, col = "orange")
mean(stepsByDay, na.rm = T )
median(stepsByDay, na.rm = T)
me<-tapply(df1$steps, df1$interval, mean)
plot(me,type="l", xlab="interval",ylab="average of steps")
plot(df$interval[1:288],stepsByInterval/288, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
stepsByInterval <- tapply(df$steps, df$interval, mean, na.rm =T)
plot(df$interval[1:288],stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(me,type="l", xlab="interval",ylab="average of steps")
max_interval <- stepsByInterval[which.max(stepsByInterval)]
max_interval
as.numeric(max_interval)
maxinterval1<-dimnames(me)[[1]][rev(order(me))[1]]
maxi1<-max(me)
maxi1
nna<-as.numeric(sum(is.na(df$steps)))
nna
NAnumber <- sum(!complete.cases(df))
NAnumber
df2<-df  # with NAs
df2
head(df2)
for (i in 1:length(df2)){
if(df2$steps[i] == NA){
df2$steps <- 20
}
}
df2$steps[1] == NA
df2<-df
for (i in 1:length(df2)){
if(is.na(df$steps[i]){
df2$steps <- 20
}
}
for (i in 1:length(df2)){
if(is.na(df$steps[i]){
df2$steps <- 20
}
}
if(is.na(df$steps[i]){
df2$steps <- 20
}
for (i in 1:length(df2)){
if(is.na(df$steps[i])){
df2$steps <- 20
}
}
df2
df2<-df
df2
for (i in 1:length(df2)){
if(is.na(df$steps[i])){
df2$steps <- 20
}
}
df2
df$steps[1]
df$steps[100]
df$steps[388]
df$steps[400]
df$steps[450]
df
df$steps[3331]
is.na(df$steps[3331])
for (i in 1:length(df2)){
if(is.na(df$steps[i])){
df$steps[i] <- 20
}
}
df2<-df
for (i in 1:length(df2)){
if(is.na(df$steps[i])){
df2$steps[i] <- 20
}
}
df2
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- 20
}
}
df2
df2$steps[1]
df2$steps[2]
df2$steps[3331]
stepsByInterval
length(df2)
df2
length(df2$steps)
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- tapply(df2$steps[i], df$interval[i], mean, na.rm =T)
}
}
df2
df2$steps[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- tapply(df2$steps[i], df2$interval[i], mean, na.rm =T)
}
}
df2$steps[1]
df2<-df
df2$steps[1]
df2<-df
df
head(df)
df <- read.csv("activity.csv", sep = ",")
names(df)
head(df)
tail(df)
#amaurandi
df1<-na.omit(df)
df2<-df
head(df)
df2$steps[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- tapply(df2$steps[i], df2$interval[i], mean, na.rm =T)
}
}
df2$steps[1]
df2$steps[2]
df2<-df
df2$steps[1]
tapply(df2$steps[i], df2$interval[i], mean, na.rm =T)
tapply(df2$steps[1], df2$interval[1], mean, na.rm =T)
df2$steps[1]
df2$interval[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- tapply(df2$steps[i], df2$interval[i], mean, na.rm =T)
}
}
df2$steps[3]
df2$steps[4]
df2<-df  # with NAs
for (i in 1:nrow(df)){     # rellenamos con la media del intervalo, y creamos el dataf df2
if (is.na(df$steps[i])){
MM<-mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
if (!is.na(MM)) {
df2$steps[i]<-MM
} else {df2$steps[i]<-99}
}
}
df2$steps[1]
df2<-df
head(df)
df2$steps[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- tapply(df2$steps[i], df2$interval, mean, na.rm =T)
}
}
df2<-df
head(df)
df2$steps[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
df2$steps[1]
df2$steps[2]
a<-0
for(i in 1: length(df2)){
if(is.na(df2$steps[i])){
a <- a+1
}
}
a
df2<-df
head(df)
df2$steps[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
df2<-df
head(df)
df2$steps[1]
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])])
}
}
a<-0
for(i in 1: length(df2)){
if(is.na(df2$steps[i])){
a <- a+1
}
}
a
stepsByDay <- tapply(df2$steps, df2$date, sum, na.rm = T)
hist(stepsByDay, breaks=100, col = "orange")
mean(stepsByDay, na.rm = T )
median(stepsByDay, na.rm = T)
stepsByDay <- tapply(df2$steps, df2$date, sum, na.rm = T)
weekdays(as.Date(df$date))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday")
df3 <- df2
df3$date <- weekdays(as.Date(df3$date))
head(df3)
str(df3)
df3$date <- factor(weekdays(as.Date(df3$date)))
df3$date <- factor(df3$date)
df3
str(df3)
f1 <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday")
f1 <- c("Monday", "Tuesday", "Wednesday", "Thursday","Friday")
f1
f2
f2<- c("Saturday", "Sunday")
stepsByDay <- tapply(df3$steps, df3$date, sum, na.rm = T)
stepsByDay
df3$nueva = as.factor(ifelse(is.element(weekdays(as.Date(imputed_data$date)),weekdays), "Weekday", "Weekend"))
df3$nueva = as.factor(ifelse(is.element(weekdays(as.Date(df3$date)),weekdays), "Weekday", "Weekend"))
df2$nueva = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
head(df2)
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
df2$new = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
df2$new = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
stepsByNew <- tapply(df2$steps, df2$new, mean, na.rm =T)
plot(stepsByNew, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(stepsByNew, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
dd<-as.character(df2$date)
dd
dd<- as.Date(dd, "%Y-%m-%d")
dd
dow<-weekdays(dd,abbreviate=T)  # "sÃ¡b", "dom"--> Saturday and Sunday
dow
dow[dow=="Sat"|dow=="Sun"]<-"weekend"
dow[dow!="weekend"]<-"weekday"
table(dow)
df2<-data.frame(df2,dow=factor(dow))
df2
dfaux<-df2[df2$dow=="weekday",]
dfaux
me<-tapply(dfaux$steps, dfaux$interval, mean)
me
plot(me,type="l"
, xlab="interval"
, ylab="average of steps"
,col="blue"
, xlim=c(0, 300)
,lwd=1.5
, asp=T)
plot(me,type="l"
, xlab="interval"
, ylab="average of steps"
,col="blue"
, xlim=c(0, 300)
,lwd=1.5
, asp=T)
plot(me)
plot(me, xmin=0, xmax=300)
plot(me, min(x)=0, max(x)=300)
plot(me,type="l"
, xlab="interval"
, ylab="average of steps"
,col="blue"
, xlim=c(0, 300)
,lwd=1.5
, asp=T)
stepsByInterval <- tapply(df$steps, df$interval, mean, na.rm =T)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
stepsByInterval <- tapply(df$steps, df$interval, mean, na.rm =T)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(me, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(me, type="l", xlim=c(0, 300),ylim = c(0,100) xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(me, type="l", xlim=c(0, 300),ylim = c(0,100), xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(me, type="l", xlim=c(0, 2500),ylim = c(0,10000), xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
me
me <- as.numeric(me)
me
me <- me[[2]]
me
me<-tapply(dfaux$steps, dfaux$interval, mean)
str(me)
<-tapply(dfaux$steps, dfaux$interval, mean)
me
df2$new = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
df3 <- df2[df2$new == "Weekday"]
df2$new = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
df2[df2$new == "Weekday"]
df3 <- df2[df2$new == "Weekday",]
df3
df4 <-df2[df2$new == "Weekend",]
stepsByInterval3 <- tapply(df3$steps, df3$interval, mean, na.rm =T)
plot(stepsByInterval3, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
stepsByInterval4 <- tapply(df4$steps, df4$interval, mean, na.rm =T)
plot(stepsByInterval4, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
df <- read.csv("activity.csv", sep = ",")
df1<-na.omit(df)
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
df2$nu = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
df2$nu = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
?ifelse
df2$nu = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
df <- read.csv("activity.csv", sep = ",")
head(df)
tail(df)
df1<-na.omit(df)
stepsByDay <- tapply(df1$steps, df1$date, sum, na.rm = T)
hist(stepsByDay, breaks=100, col = "orange")
```
mean(stepsByDay, na.rm = T )
median(stepsByDay, na.rm = T)
stepsByInterval <- tapply(df$steps, df$interval, mean, na.rm =T)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
max_interval <- stepsByInterval[which.max(stepsByInterval)]
NAnumber <- sum(!complete.cases(df))
NAnumber
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
stepsByDay <- tapply(df2$steps, df2$date, sum, na.rm = T)
hist(stepsByDay, breaks=100, col = "orange")
mean(stepsByDay, na.rm = T )
median(stepsByDay, na.rm = T)
df2$nu = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
?ifelse
weekdays <- c("Monday", "Tuesday", "Wednesday","Thursday","Friday")
is.element(weekdays(as.Date(df2$date[1])),weekdays)
as.Date(df2$date[1])
is.element(weekdays(as.Date(df2$date[2])),weekdays)
df2$date[2
]
is.element(weekdays(as.Date(df2$date[2])))
for(i in 1:length(df2)){
if(is.element(weekdays(as.Date(df2$date[i])),weekdays)){
df2$new[i] <- "Weekday"
}
else{
df2$new[i] <- "Weekend"
}
}
df2
head(df2)
df2[1,]
df2[100,]
df2[200,]
df2[300,]
df2[400,]
a<-0
for(i in 1:length(df2)){
if(df2$new[i] == "Weekend"){
a <- a+1
}
}
a
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday")
df2$dow = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
}
}
df2$nu = as.factor(ifelse(is.element(weekdays(as.Date(df2$date)),weekdays), "Weekday", "Weekend"))
m <- mean(stepsByDay, na.rm = T )
md <- median(stepsByDay, na.rm = T)
stepsByInterval <- tapply(df$steps, df$interval, mean, na.rm =T)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval")
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval", col = orange)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval", col = orange)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval", colpr = orange)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval", color = orange)
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval", col = "orange")
plot(stepsByInterval, type="l", xlab="Interval", ylab="Number of steps",main="Average number of steps per dayy by interval", col = "orange", lwd = 3)
max_interval <- stepsByInterval[which.max(stepsByInterval)]
max_interval
df2<-df
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){ #when we find a missing value
df2$steps[i] <- mean(df$steps[which(df$interval==df$interval[i])], na.rm = T)
#we substutite it by
}
}
head(df2)
df2<-df
head(df)
for (i in 1:length(df2)){
if(is.na(df2$steps[i])){ #when we find a missing value
df2$steps[i] <- mean(df2$steps[df$interval==df2$interval[i]], na.rm = T)
#we substutite it by
}
}
head(df2)
df2$steps[df$interval==df2$interval[1]]
df$steps[df$interval==df$interval[1]]
df$steps[df$interval==df$interval[2]]
```{r, echo= TRUE}
stepsByDay <- tapply(df2$steps, df2$date, sum, na.rm = T)
hist(stepsByDay, breaks=100, col = "orange")
stepsByDay2 <- tapply(df2$steps, df2$date, sum, na.rm = T)
hist(stepsByDay2, breaks=100, col = "orange")
mean(stepsByDay2, na.rm = T )
median(stepsByDay2, na.rm = T)
stepsByDay <- tapply(df1$steps, df1$date, sum, na.rm = T)
hist(stepsByDay, breaks=100, col = "orange")
```
m
m <- mean(stepsByDay, na.rm = T )
m
md <- median(stepsByDay, na.rm = T)
md
m
md2(stepsByDay2, na.rm = T)
difm <- abs(m-m2)
difmd <- abs(md-md2)
difm
m2 <- mean(stepsByDay2, na.rm = T )
md2(stepsByDay2, na.rm = T)
md2<-stepsByDay2, na.rm = T)
md2 <- mean(stepsByDay2, na.rm = T)
difm <- abs(m-m2)
difmd <- abs(md-md2)
difm
difmd
m
m2
abs(m-m2)
difmd <- abs(md-md2)
difm
difmd
